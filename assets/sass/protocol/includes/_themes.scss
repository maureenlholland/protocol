// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

@use 'sass:map';

// This file contains all the theme variables for both the Firefox and Mozilla
// themes. Mixins and functions can draw from these variable maps, swapping to
// a different map based on the value of the global $brand-theme variable.

// * -------------------------------------------------------------------------- */
// Vertical and Horizontal Spacing

$spacing: (
    // xs
    v-grid-xs: $layout-md,
    h-grid-xs: $layout-xs,
    // sm is the same as xs
    v-grid-sm: $layout-md,
    h-grid-sm: $layout-xs,
    // md
    v-grid-md: $layout-md,
    h-grid-md: $layout-lg,
    // lg is the same as medium
    v-grid-lg: $layout-md,
    h-grid-lg: $layout-lg,
    // xl
    v-grid-xl: $layout-xl,
    h-grid-xl: 80px,
);


// Get a type scale value from the scale map
// Usage:
//    type-scale('scale-value');
// Size values are define in pixels. Use the font-size() mixin
// to convert to rem with px fallback. Example:
//    @include font-size(type-scale('title-xl-size'));
// An alternative, condensed type scale is defined in a separate
// map. When the $type-scale variable is set to 'condensed' this
// function will draw its values from that alternative map.

@function type-scale($type-scale, $type-scale-condensed, $scale) {
    // Default
    $scale-map: $type-scale;

    @if $type-scale == 'condensed' {
        $scale-map: $type-scale-condensed;
    }

    @if not map-has-key($scale-map, $scale) {
        @error '`#{$scale}` is not a valid type scale variable name. ' + 'Valid variable names: #{map-keys($scale-map)}';
    }

    @return map-get($scale-map, $scale);
}

// Get a theme variable from the collected map.
// This swaps the map based on the value of $brand-theme.
// Theme maps are defined in includes/_theme.scss

@function get($theme-map, $var) {

    @if not map-has-key($theme-map, $var) {
        @error '`#{$var}` is not a valid theme variable. ' + 'Valid theme variable names: #{map-keys($theme-map)}';
    }

    @return map-get($theme-map, $var);
}
